//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// DecalSampler                      sampler      NA          NA    0        1
// DiffuseTexture                    texture  float4          2d    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
// NORMAL                   0   xyz         3     NONE   float   xyz 
// TEXCOORD                 1   xyz         4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t0               
//
//
// Level9 shader bytecode:
//
    ps_2_x
    def c0, 1, 0.5, 0.699999988, 0.800000012
    def c1, 0, 0.400000006, 0.300000012, 0.100000001
    def c2, 0.577350259, -0.577350259, 1, 0.899999976
    dcl t1.xy  // pin<8,9>
    dcl t2.xyz  // pin<10,11,12>
    dcl_2d s0

#line 13 "C:\Users\2170267.MAETEL\Desktop\testç”¨3dgp\Shader_test_ps.hlsl"
    texld r0, t1, s0  // ::tex<0,1,2,3>

#line 16
    dp3 r1.w, t2, t2
    rsq r1.x, r1.w
    mul r1.xyz, r1.x, t2  // ::N<0,1,2>

#line 19
    add r1.w, r1.y, c0.x
    mul r1.w, r1.w, c0.y  // ::skyRate<0>
    mul r2.xyz, r1.w, c0.yzww
    add r2.xyz, r2, c1.x  // ::Ambient<0,1,2>
    mov r1.w, -r1.y
    add r1.w, r1.w, c0.x
    mul r1.w, r1.w, c0.y  // ::groundRate<0>
    mul r3.xyz, r1.w, c1.yzww
    add r2.xyz, r2, r3  // ::Ambient<0,1,2>

#line 29
    dp3 r2.w, c2.xyyw, r1
    mov r2.w, -r2.w  // ::rate<0>
    mov r1.x, -r2.w
    add r1.x, r1.x, c1.x
    cmp r2.w, r1.x, c1.x, r2.w  // ::rate<0>
    mul r1.xyz, r2.w, c2.zzww
    add r1.xyz, r1, c1.x  // ::Light<0,1,2>

#line 34
    add r1.xyz, r2, r1
    mul r0.xyz, r0, r1  // ::tex<0,1,2>
    mov r0.xyz, r0  // ::main<0,1,2>
    mov r0.w, r0.w  // ::main<3>

#line 12
    mov oC0, r0  // ::main<0,1,2,3>

// approximately 25 instruction slots used (1 texture, 24 arithmetic)
ps_4_0
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyz
dcl_output o0.xyzw
dcl_temps 5
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.color.x; v1.y <- pin.color.y; v1.z <- pin.color.z; v1.w <- pin.color.w; 
//   v2.x <- pin.texcoord.x; v2.y <- pin.texcoord.y; 
//   v3.x <- pin.Normal.x; v3.y <- pin.Normal.y; v3.z <- pin.Normal.z; 
//   v4.x <- pin.ViewVec.x; v4.y <- pin.ViewVec.y; v4.z <- pin.ViewVec.z; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 13 "C:\Users\2170267.MAETEL\Desktop\test—p3dgp\Shader_test_ps.hls"
sample r0.xyzw, v2.xyxx, t0.xyzw, s0  // r0.x <- tex.x; r0.y <- tex.y; r0.z <- tex.z; r0.w <- tex.w
itof r1.xyz, l(0, 0, 0, 0)  // r1.x <- Ambient.x; r1.y <- Ambient.y; r1.z <- Ambient.z
dp3 r1.w, v3.xyzx, v3.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, v3.xyzx  // r2.x <- N.x; r2.y <- N.y; r2.z <- N.z

#line 19
add r1.w, r2.y, l(1.000000)
mul r1.w, r1.w, l(0.500000)  // r1.w <- skyRate
mul r3.xyz, r1.wwww, l(0.500000, 0.700000, 0.800000, 0.000000)
add r1.xyz, r1.xyzx, r3.xyzx
mov r1.w, -r2.y
itof r2.w, l(1)
add r1.w, r1.w, r2.w
mul r1.w, r1.w, l(0.500000)  // r1.w <- groundRate
mul r3.xyz, r1.wwww, l(0.400000, 0.300000, 0.100000, 0.000000)
add r1.xyz, r1.xyzx, r3.xyzx
itof r3.xyz, l(0, 0, 0, 0)  // r3.x <- Light.x; r3.y <- Light.y; r3.z <- Light.z
mov r4.xyz, l(1.000000,-1.000000,-1.000000,0)  // r4.x <- L.x; r4.y <- L.y; r4.z <- L.z
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r4.xyzx
dp3 r1.w, r4.xyzx, r2.xyzx
mov r1.w, -r1.w  // r1.w <- rate

#line 30
itof r2.x, l(0)
max r1.w, r1.w, r2.x
mul r2.xyz, r1.wwww, l(1.000000, 1.000000, 0.900000, 0.000000)
add r2.xyz, r2.xyzx, r3.xyzx  // r2.x <- Light.x; r2.y <- Light.y; r2.z <- Light.z

#line 34
add r1.xyz, r1.xyzx, r2.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 31 instruction slots used
